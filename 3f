	static ArrayList<Node> BFSRec(final Graph graph){
		ArrayList<Node> arr = new ArrayList<Node>();
		Queue<Node> q = new LinkedList<>();
		for(int i = 0; i < graph.vertices.size(); i++) {
			if(!(graph.vertices.get(i).getVisited())){
				q.add(graph.vertices.get(i));
				return BFShelper(graph, arr, q);
			}
		}
		return arr;
	}
	
	static ArrayList<Node> BFShelper(Graph graph, ArrayList<Node> arr, Queue<Node> q){
		if(q.isEmpty()) {
			return arr;
		}
		else {
			Node temp = q.poll();
			
			for(int j = 0; j < temp.neighbors.size(); j++){
				if(!(temp.neighbors.get(j).getVisited())) {
					q.add(temp.neighbors.get(j));
					temp.neighbors.get(j).setVisited();
				}
			}
		}
		return BFShelper(graph, arr, q);
	}
